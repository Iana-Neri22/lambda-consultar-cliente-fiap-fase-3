{
  "service": {
    "service": "FiapLanchoneteAuthorizer",
    "serviceObject": {
      "name": "FiapLanchoneteAuthorizer"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.11",
      "region": "us-east-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ConsultarDashclienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/FiapLanchoneteAuthorizer-dev-consultar-cliente"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "FiapLanchoneteAuthorizer",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FiapLanchoneteAuthorizer-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FiapLanchoneteAuthorizer-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "FiapLanchoneteAuthorizer",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "DependenciesLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FiapLanchoneteAuthorizer/dev/1746319046404-2025-05-04T00:37:26.404Z/dependencies.zip"
              },
              "LayerName": "FiapLanchoneteAuthorizer-dependencies",
              "Description": "Dependencies for FiapLanchoneteAuthorizer",
              "CompatibleRuntimes": [
                "python3.11"
              ]
            }
          },
          "ConsultarDashclienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FiapLanchoneteAuthorizer/dev/1746743483831-2025-05-08T22:31:23.831Z/consultar-cliente.zip"
              },
              "Handler": "src.lambda_function.lambda_handler",
              "Runtime": "python3.11",
              "FunctionName": "FiapLanchoneteAuthorizer-dev-consultar-cliente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "DependenciesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "ConsultarDashclienteLogGroup"
            ]
          },
          "ConsultarDashclienteLambdaVersionEiUAZbFGgOvgdffHtRZ5CwapZI30t3jvw1HpKRxP1rI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConsultarDashclienteLambdaFunction"
              },
              "CodeSha256": "4TPxUag+EOHI4ce3AYCze2vSXlEH65NffYSrn6egAHA="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-FiapLanchoneteAuthorizer",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceConsultarDashcliente": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "consultar-cliente",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodConsultarDashclienteOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceConsultarDashcliente"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodConsultarDashclientePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceConsultarDashcliente"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ConsultarDashclienteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ConsultarDashclienteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1746743414926": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodConsultarDashclienteOptions",
              "ApiGatewayMethodConsultarDashclientePost"
            ]
          },
          "ConsultarDashclienteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConsultarDashclienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-ServerlessDeploymentBucketName"
            }
          },
          "DependenciesLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "DependenciesLambdaLayer"
            },
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-DependenciesLambdaLayerQualifiedArn"
            }
          },
          "DependenciesLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "c87ec281430f7994cc33e52339728a9c674de579",
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-DependenciesLambdaLayerHash"
            }
          },
          "DependenciesLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/FiapLanchoneteAuthorizer/dev/1746319046404-2025-05-04T00:37:26.404Z/dependencies.zip",
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-DependenciesLambdaLayerS3Key"
            }
          },
          "ConsultarDashclienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConsultarDashclienteLambdaVersionEiUAZbFGgOvgdffHtRZ5CwapZI30t3jvw1HpKRxP1rI"
            },
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-ConsultarDashclienteLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-FiapLanchoneteAuthorizer-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "noDeploy": [
          "boto3",
          "botocore",
          "docutils",
          "jmespath",
          "python-dateutil",
          "s3transfer",
          "six",
          "urllib3"
        ],
        "zip": true,
        "slim": true,
        "strip": true,
        "useStaticCache": true,
        "useDownloadCache": true,
        "cacheLocation": "./.serverless/requirements",
        "noCache": false,
        "dockerizePip": false,
        "layer": false,
        "compatibleRuntimes": [
          "python3.11"
        ]
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "consultar-cliente": {
        "handler": "src.lambda_function.lambda_handler",
        "events": [
          {
            "http": {
              "path": "consultar-cliente",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ConsultarDashclienteLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "FiapLanchoneteAuthorizer-dev-consultar-cliente",
        "package": {
          "patterns": [
            "unzip_requirements.py",
            "./.requirements.zip"
          ],
          "artifact": "C:\\Users\\User\\OneDrive\\Documents\\Git Workspace\\lambda-consultar-cliente-fiap-fase-3\\.serverless\\consultar-cliente.zip"
        },
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.11",
        "vpc": {},
        "versionLogicalId": "ConsultarDashclienteLambdaVersionEiUAZbFGgOvgdffHtRZ5CwapZI30t3jvw1HpKRxP1rI"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "FiapLanchoneteAuthorizer",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "dependencies": {
          "path": "layer",
          "name": "FiapLanchoneteAuthorizer-dependencies",
          "description": "Dependencies for FiapLanchoneteAuthorizer",
          "compatibleRuntimes": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DependenciesLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
          },
          "package": {
            "artifact": "C:\\Users\\User\\OneDrive\\Documents\\Git Workspace\\lambda-consultar-cliente-fiap-fase-3\\.serverless\\dependencies.zip"
          },
          "artifactAlreadyUploaded": true
        }
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "include": [
          "src/**",
          ".env",
          "requirements.txt",
          "setup.py"
        ],
        "exclude": [
          "node_modules/**",
          "venv/**",
          ".git/**",
          ".vscode/**",
          ".serverless/**",
          "__pycache__/**",
          ".pytest_cache/**",
          "layer/**",
          "package/**"
        ],
        "artifactsS3KeyDirname": "serverless/FiapLanchoneteAuthorizer/dev/code-artifacts",
        "artifactDirectoryName": "serverless/FiapLanchoneteAuthorizer/dev/1746743483831-2025-05-08T22:31:23.831Z"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"layers\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/FiapLanchoneteAuthorizer/dev/1746743483831-2025-05-08T22:31:23.831Z",
    "artifact": ""
  }
}